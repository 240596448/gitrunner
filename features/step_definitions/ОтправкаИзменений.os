// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯОтправляюИзмененияВоВнешнийРепозиторийВВетку");
	ВсеШаги.Добавить("ЯСоздаюНовыйОбъектНастройкарежимаотправки");
	ВсеШаги.Добавить("ЯУстанавливаюНастройкуОтправкиРежимаТишиныВЗначение");
	ВсеШаги.Добавить("ЯУстанавливаюНастройкуОтправкиПолнаяОтправкаВЗначение");
	ВсеШаги.Добавить("ЯУстанавливаюНастройкуОтправкиОтображениеПрогрессаВЗначение");
	ВсеШаги.Добавить("ЯОтправляюИзмененияЧерезНастройкуРежимаОтправки");
	ВсеШаги.Добавить("ВыводКомандыСодержит");
	ВсеШаги.Добавить("ЯСообщаюВыводКоманды");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры
//Вывод команды содержит ""
Процедура ВыводКомандыСодержит(Знач ОжидаемыйВыводКоманды) Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	
	ВыводКоманды = ГитРепозиторий.ПолучитьВыводКоманды();
	Ожидаем.Что(ВыводКоманды).Содержит(ОжидаемыйВыводКоманды);
КонецПроцедуры

//Я сообщаю вывод команды
Процедура ЯСообщаюВыводКоманды() Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	
	ВыводКоманды = ГитРепозиторий.ПолучитьВыводКоманды();
	Сообщить(ВыводКоманды);
	
КонецПроцедуры

//Я отправляю изменения во внешний репозиторий "origin" в ветку "test"
Процедура ЯОтправляюИзмененияВоВнешнийРепозиторийВВетку(Знач ИмяВнешнегоРепозитория,Знач ИмяВетки) Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	ГитРепозиторий.Отправить(ИмяВнешнегоРепозитория, ИмяВетки);
КонецПроцедуры
//Я создаю новый объект НастройкаРежимаОтправки
Процедура ЯСоздаюНовыйОбъектНастройкарежимаотправки() Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	НастройкиРежимаОтправки = ГитРепозиторий.НастройкиРежимаОтправки();
	БДД.СохранитьВКонтекст("НастройкиРежимаОтправки", НастройкиРежимаОтправки);
КонецПроцедуры

//Я устанавливаю настройку отправки режима тишины в значение "true"
Процедура ЯУстанавливаюНастройкуОтправкиРежимаТишиныВЗначение(Знач РежимаТишины) Экспорт
	НастройкиРежимаОтправки = БДД.ПолучитьИзКонтекста("НастройкиРежимаОтправки");
	НастройкиРежимаОтправки.РежимТишины(РежимаТишины);
КонецПроцедуры

//Я устанавливаю настройку отправки полная отправка в значение "true"
Процедура ЯУстанавливаюНастройкуОтправкиПолнаяОтправкаВЗначение(Знач ПолнаяОтправка) Экспорт
	НастройкиРежимаОтправки = БДД.ПолучитьИзКонтекста("НастройкиРежимаОтправки");
	НастройкиРежимаОтправки.ПолнаяОтправка(ПолнаяОтправка);
КонецПроцедуры

//Я устанавливаю настройку отправки отображение прогресса в значение "true"
Процедура ЯУстанавливаюНастройкуОтправкиОтображениеПрогрессаВЗначение(Знач ОтображатьПрогресс) Экспорт
	НастройкиРежимаОтправки = БДД.ПолучитьИзКонтекста("НастройкиРежимаОтправки");
	НастройкиРежимаОтправки.ОтображатьПрогресс(ОтображатьПрогресс);
КонецПроцедуры

//Я отправляю изменения через настройку режима отправки
Процедура ЯОтправляюИзмененияЧерезНастройкуРежимаОтправки() Экспорт
	НастройкиРежимаОтправки = БДД.ПолучитьИзКонтекста("НастройкиРежимаОтправки");
	НастройкиРежимаОтправки.Отправить();
КонецПроцедуры



